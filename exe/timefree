#!/usr/bin/env ruby

require "rbtune/version"
require "rbtune/timefree"
require "keychain"
require "optparse"

channel  = nil
date     = nil
time     = nil
min      = 30
filename = nil

keyword        = nil
account        = nil
list_stations  = false
fetch_stations = false

opt = OptionParser.new
opt.version = Rbtune::VERSION
opt.banner += <<"EOS"
 station date time minutes

 radikoのタイムフリー機能で公開されている番組をファイルに録音する

    date:    [年/]月/日 or sun,mon,tue,wed,thu,fri,sat
    time:    時:分

EOS
opt.on("-w WORD", "--word", "番組検索ワード"){|v| keyword=v}
opt.on("-o FILE", "--output", "録音するファイル名 (省略時、放送局コード)"){|v| filename=v}
opt.on("-l", "--list-stations", "放送局リストを表示して終了" ) { list_stations = true }
opt.on("--fetch-stations", "放送局リストを取得して終了" ) { fetch_stations = true }
opt.on("--set-account ACCOUNT", "radikoプレミアムのアカウントを登録して終了") {|v| account = v}
opt.parse! ARGV

kc = KeyChain.new("http://radiko.jp")
case
when account
  RadikoPremium.set_authentication kc, account
  exit

when list_stations
  Station.list_stations
  exit

when fetch_stations
  Station.fetch_stations
  exit
end

if ARGV.size == 0
  puts opt.help
  exit 1
end
channel = ARGV[0]

radio_class, station = Radio.search channel
if radio_class
  puts "station: #{station.name}"
  channel = station.id
else
  puts "放送局コード #{channel} は登録されていません"
  exit 1
end

filename ||= keyword || channel

if keyword
  progs = TimeFree::Program::fetch(channel)
  progs = TimeFree::Program::timefree(progs)
  progs = TimeFree::Program::search(progs, keyword)
  if progs.size == 1
    prog = progs[0]
    starttime = prog.from
    endtime = prog.to
    puts "found: #{prog.title} #{starttime} - #{endtime}"
  else
    exit 1
  end
else
  begin
    date = ARGV[1]
    time = ARGV[2].dup
    # 25-29時が指定された場合、翌日の未明とする
    day  = time.sub!(/(2[5-9]):/){ "#{$1.to_i-24}:" }? 1 : 0
    starttime = Date.parse("#{date}T#{time}") + day
    # date が sun,mon,..,sat など曜日指定だと、当日以外は翌日以降を返すので、
    # 未来だったら前の週の日付を求める (当日だったらそのまま)
    starttime -= 7 if starttime > Date.today + 1
    starttime = starttime.to_time

  rescue ArgumentError
    puts "日時のフォーマットに誤りがあります: date=#{date} time=#{time}"
    exit 1
  end

  min = ARGV[3].to_f
  endtime = starttime + min*60
end

begin
  radio = TimeFree.new
  radio.outdir = ENV['RADIODIR'] || '.'
  if radio.is_a? RadikoPremium
    account, password = kc.account
    radio.login account, password
  end
  radio.open
  radio.tune channel
  radio.record filename, starttime, endtime

rescue Radio::HTTPBadRequestException
  puts "HTTPBadRequest: 番組の公開が終了しています"

rescue Radio::HTTPForbiddenException
  puts 'radikoプレミアムの認証に失敗しました。timefree --set-account で正しいアカウントとパスワードを設定してください'

rescue Interrupt
  # do nothing

ensure
  radio.close
end