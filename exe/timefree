#!/usr/bin/env ruby

require "timefree"
require "pp"
require "optparse"

channel = nil
date = nil
time = nil
min = 30

radio_classes = [Radiko, RadikoPremium]
stations = radio_classes.map { |radio| radio::channels.keys }.flatten!

opt = OptionParser.new
opt.version = Rbradi::VERSION
opt.banner += <<"EOS"
 station date time min

    station: #{stations*'|'}
    date:    mm/dd or sun-sat
    time:    HH:MM
    min:     minutes

EOS
opt.on("-o ファイル名", "--output", "出力ファイル [timefree]"){|v| filename=v}
opt.parse! ARGV

raise opt.help unless ARGV.size == 4
channel = ARGV[0]
radio_class = radio_classes.find do |radio|
  radio::channels[channel]
end
raise "Channel #{channel} not found." unless radio_class
filename = channel
ch = radio_class::channels[channel]

begin
  date, time = ARGV[1,2]
  starttime = DateTime.parse("#{date}T#{time}")
  # -dがsun,mon,..,satなど曜日指定だと、当日以外は翌日以降を返すので、
  # 未来だったら前の週の日付を求める (当日だったらそのまま)
  starttime -= 7 if starttime > Date.today + 1
rescue
  raise "Format Error: date #{date} time #{time} "
end


min = ARGV[3].to_f
sec = min*60

account = "fusuian@gmail.com"
password =  "raradiko"


radio=TimeFree.new 
radio.outdir = ENV['RADIODIR'] || '.'
radio.login account, password 
radio.open
#radio.tune channel
radio.play channel: ch, from: starttime, sec: sec, filename: filename
radio.close
