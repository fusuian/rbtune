#!/usr/bin/env ruby

require "rbtune/version"
require "rbtune/timefree"
require "keychain"
require "optparse"

channel  = nil
date     = nil
time     = nil
min      = 30
filename = nil

show_stations  = false

opt = OptionParser.new
opt.version = Rbtune::VERSION
opt.banner += <<"EOS"
 station date time min

 ラジコのタイムフリー機能で公開されている番組を録音（ダウンロード）する

    date:    mm/dd or sun-sat
    time:    HH:MM
    min:     minutes

EOS
opt.on("-o FILE", "--output", "録音するファイル名 (省略時、放送局コード)"){|v| filename=v}
opt.on("-l", "--list-stations", "放送局リストを表示して終了" ) { show_stations = true }
opt.parse! ARGV

kc = KeyChain.new("http://radiko.jp")

case
when show_stations
  Station.show_stations
  exit

when ARGV.size != 4
  puts opt.help
  exit 1
end
channel = ARGV[0]

radio_class, station = Radio.search channel
if radio_class
  puts "station: #{station.name}"
  channel = station.id
else
  puts "放送局コード #{channel} は登録されていません"
  exit 1
end

filename ||= channel

begin
  date, time = ARGV[1,2]
  time = time.dup
  day = time.sub!(/(2[5-9]):/){ "#{$1.to_i-24}:" }? 1 : 0
  starttime = DateTime.parse("#{date}T#{time}") + day
  # date が sun,mon,..,sat など曜日指定だと、当日以外は翌日以降を返すので、
  # 未来だったら前の週の日付を求める (当日だったらそのまま)
  starttime -= 7 if starttime > Date.today + 1
rescue Date::Error
  puts "日時のフォーマットに誤りがあります: date #{date} time #{time}"
  exit 1
end


min = ARGV[3].to_f
sec = min*60


begin
  radio=TimeFree.new
  radio.outdir = ENV['RADIODIR'] || '.'
  account, password = kc.account
  radio.login account, password
  radio.open
  radio.tune channel
  radio.record filename, starttime, sec

rescue Radio::HTTPBadRequestException
  puts "HTTPBadRequest: 番組の公開が終了しています"

rescue Radio::HTTPForbiddenException
  puts 'ラジコプレミアムの認証に失敗しました。rdtune コマンドの --set-account オプションで正しいアカウントとパスワードを設定してください'

rescue Interrupt
  # do nothing

ensure
  radio.close
end