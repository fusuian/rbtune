#!/usr/bin/env ruby
# coding: utf-8
# 日本のラジオ局のサイトから再生（または録音）する

require "rbtune"
require "keychain"
require "optparse"
require "pp"

filename = nil
quiet    = false
wait     = 0

account  = nil

stations = Radio.bands.map { |radio| radio::channels.keys }.flatten!

opt = OptionParser.new
Version = Rbtune::VERSION
opt.banner += <<EOS
 station min

		station: #{stations*'|'}

		min:     minutes

 らじる★らじる、ラジコなどの日本のラジオ局のサイトから再生（または録音）する

EOS
opt.on("-o ファイル名","--output","出力ファイル"){|v| filename = v}
opt.on("-w [0]", "--wait", Float, "録音開始までの待ち時間（秒）")
opt.on("-q", "--quiet", "録音時の同時再生を行わない" ) {|v| quiet = true}
opt.on("--set-account ACCOUNT", "ラジコプレミアムのアカウントを登録して終了") {|v| account = v}
opt.parse! ARGV

kc = KeyChain.new("http://radiko.jp")
if account
  RadikoPremium::set_authentication kc, account
  exit
end
end

unless ARGV.size == 2
	puts opt.help
	exit 1
end
channel = ARGV[0]
min     = ARGV[1].to_f
sec     = min*60

radio_class = Radio.bands.find { |tuner| tuner::channels[channel] }
unless radio_class
	puts "放送局コード #{channel} は登録されていません"
	exit 1
end
radio = radio_class.new
radio.outdir = ENV['RADIODIR'] || '.'

begin
	radio.open
	radio.tune channel
	radio.play wait: wait, sec: sec, filename: filename, quiet: quiet
  if radio.is_a? RadikoPremium
    account, password = kc.account
    radio.login account, password
  end

rescue Radio::HTTPForbiddenException
  puts 'ラジコプレミアムの認証に失敗しました。--set-account オプションで正しいアカウントとパスワードを設定してください'

rescue Interrupt
	# do nothing

ensure
	radio.close
end
