#!/usr/bin/env ruby

require "rbradi/version"
require "radiru"
require "radiko"
require "radiko_premium"
require "simul"
require "listenradio"
require "optparse"

channel = nil
filename = nil
min = 30
quiet = false
wait = 0

opt = OptionParser.new
opt.version = Rbradi::VERSION
opt.banner += <<"EOS"
 site station

    site:    #{Radio::bands*'|'}
    station:
#{Radio::bands.map {|band| %Q(      #{band}: #{band::channels.keys*'|'})} *"\n" }

EOS
# opt.on("-c channel_name","--channel", stations*'|'){|v| channel = v}
opt.on("-t [30]","--time", Float, "録音時間 (分）"){|v| min = v}
opt.on("-o ファイル名","--output","出力ファイル"){|v| filename = v}
opt.on("-w [0]", "--wait", Float, "録音開始までの待ち時間（秒）")
opt.on("-q", "--quiet", "録音時の同時再生を行わない" ) {|v| quiet = true}
opt.parse! ARGV

raise opt.help unless ARGV.size == 2
klass = Module.const_get(ARGV.shift)
radio = klass.new
raise "site #{klass} not found." unless radio.is_a? Radio

channel = ARGV.shift
raise "station #{channel} not found." unless channel && radio.class.channels.include?(channel)

sec = min.to_f*60

begin
  radio.open
  radio.tune channel
  radio.play wait: wait, sec: sec, filename: filename, quiet: quiet
rescue Interrupt
  # do nothing
ensure
  radio.close
end
